# This is a basic workflow to help you get started with Actions

name: builder

# git push --tags 执行时候进行编译
on:
  push:
    tags:
      - v*

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout
        uses: actions/checkout@v3

     
      # Runs a single command using the runners shell
      - name: Setup Java JDK
        uses: actions/setup-java@v3
        with: 
            distribution: 'zulu'
            java-version: "17"
            token: ${{secrets.GITHUB_TOKEN}}

      - name: Flutter action
        uses: subosito/flutter-action@v2
        with:
            flutter-version: 3.10.3
            channel: stable
      
      - name: Decode keystore
        run: |
          echo $ENCODED_KEYSTORE | base64 -di > android/app/keystore.jks
        env:
          ENCODED_KEYSTORE: ${{ secrets.KEYSTORE }}
          
      - run: flutter pub get
      # 打包apk
      - name: Collect Apks
        run: flutter build apk --release --split-per-abi
        env:
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD}}
          
      # 复制linux二进制文件到AppDir目录,准备打包
      - name: Collect Apks2
        run: 
          rm -rf AppDir || true
          cp -r build/linux/x64/release/bundle AppDir
          wget -O appimage-builder-x86_64.AppImage https://github.com/AppImageCrafters/appimage-builder/releases/download/v1.0.0-beta.1/appimage-builder-1.0.0-677acbd-x86_64.AppImage 
          chmod +x appimage-builder-x86_64.AppImage
          sudo mv appimage-builder-x86_64.AppImage /usr/local/bin/appimage-builder
          appimage-builder --recipe AppImageBuilder.yml
       
      # 发布安装包
      - name: Release Packages
        uses: ncipollo/release-action@v1
        with:
            artifacts: "build/app/outputs/flutter-apk/app-*.apk"
            allowUpdates: true

