name: builder

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      name:
        # Friendly description to be shown in the UI instead of 'name'
        description: 'Person to greet'
        # Default value if no value is explicitly provided
        default: 'World'
        # Input has to be provided for the workflow to run
        required: true
        # The data type of the input
        type: string

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

     
      # Runs a single command using the runners shell
      - name: Setup Java JDK
        uses: actions/setup-java@v3
        with: 
            distribution: 'zulu'
            java-version: "17"
            token: ${{secrets.GITHUB_TOKEN}}

      - name: Flutter action
        uses: subosito/flutter-action@v2
        with:
            flutter-version: 3.10.3
            channel: stable
      
          
      - run: flutter pub get

#      - name: Build Linux-arm64

      - run:    sudo apt-get update -y
      - run:    apt-cache search aarch64
      - run:    sudo apt-get install -y libmpv-dev mpv gcc-11-aarch64-linux-gnu clang cmake ninja-build pkg-config libgtk-3-dev liblzma-dev libunwind-dev libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev binutils coreutils desktop-file-utils fakeroot fuse libgdk-pixbuf2.0-dev patchelf python3-pip python3-setuptools squashfs-tools strace util-linux zsync
      - run:    flutter build linux --release --target-platform linux-arm64
      - run:    rm -rf AppDir || true
      - run:    cp -r build/linux/arm64/release/bundle AppDir
      - run:    wget -O appimagetool-x86_64.AppImage https://mirror.ghproxy.com/https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage 
      - run:    chmod +x appimagetool-x86_64.AppImage
      - run:    sudo mv appimagetool-x86_64.AppImage /usr/local/bin/appimagetool
     # - run:    bash ./scripts/build_linux_appimage.sh
      - run:    rm -rf scripts/bili_you.AppDir/opt/
      - run:    cp -r build/linux/arm64/release/bundle/ scripts/bili_you.AppDir/opt/
      - run:    appimagetool scripts/bili_you.AppDir build/BiliYou-arm64.AppImage
      - run:    rm -rf scripts/bili_you.AppDir/opt/
      - run:    rm scripts/bili_you.AppDir/.DirIcon
      
     # - run:    tar -cvf bili_you.tar AppDir
     # - run:    wget -O BiliYou-x86_64.AppImage https://github.com/lucinhu/bili_you/releases/download/v1.1.5%2B15/BiliYou-x86_64.AppImage
     # - run:    chmod +x BiliYou-x86_64.AppImage
      #- run:    ./BiliYou-x86_64.AppImage --appimage-extract
     # - run:    rm -rf BiliYou-x86_64.AppImage || true
      #- run:    tar -cvf bili_you_x64.tar squashfs-root
      #- run:    appimage-builder --appdir squashfs-root
      #- run:    mv *.AppImage *_aimg.tar
      
      - name: Release Packages
        uses: ncipollo/release-action@main
        if: ${{ env.PACKAGED_STATUS }} == 'success' && !cancelled()
        with:
          tag: v1.1.5
          artifacts: "build/BiliYou-arm64.AppImage"
          allowUpdates: true
          removeArtifacts: false
          replacesArtifacts: true
          token: ${{ secrets.GITHUB_TOKEN }}
          body: |
           test
